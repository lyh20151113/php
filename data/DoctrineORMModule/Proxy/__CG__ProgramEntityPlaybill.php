<?php

namespace DoctrineORMModule\Proxy\__CG__\Program\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Playbill extends \Program\Entity\Playbill implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'channel', 'broadcastDate', 'creater', 'createTime', 'lastEditor', 'lastEditTime', 'auditor', 'auditTime', 'auditResult', 'isDel', 'programCount');
        }

        return array('__isInitialized__', 'id', 'channel', 'broadcastDate', 'creater', 'createTime', 'lastEditor', 'lastEditTime', 'auditor', 'auditTime', 'auditResult', 'isDel', 'programCount');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Playbill $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getProgramCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgramCount', array());

        return parent::getProgramCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgramCount($programCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgramCount', array($programCount));

        return parent::setProgramCount($programCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', array());

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getBroadcastDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBroadcastDate', array());

        return parent::getBroadcastDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreater()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreater', array());

        return parent::getCreater();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateTime', array());

        return parent::getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEditor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEditor', array());

        return parent::getLastEditor();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastEditTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastEditTime', array());

        return parent::getLastEditTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuditor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuditor', array());

        return parent::getAuditor();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuditTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuditTime', array());

        return parent::getAuditTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuditResult()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuditResult', array());

        return parent::getAuditResult();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDel', array());

        return parent::getIsDel();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel($channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', array($channel));

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function setBroadcastDate($broadcastDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBroadcastDate', array($broadcastDate));

        return parent::setBroadcastDate($broadcastDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreater($creater)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreater', array($creater));

        return parent::setCreater($creater);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateTime($createTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateTime', array($createTime));

        return parent::setCreateTime($createTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEditor($lastEditor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEditor', array($lastEditor));

        return parent::setLastEditor($lastEditor);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastEditTime($lastEditTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastEditTime', array($lastEditTime));

        return parent::setLastEditTime($lastEditTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuditor($auditor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuditor', array($auditor));

        return parent::setAuditor($auditor);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuditTime($auditTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuditTime', array($auditTime));

        return parent::setAuditTime($auditTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuditResult($auditResult)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuditResult', array($auditResult));

        return parent::setAuditResult($auditResult);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDel($isDel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDel', array($isDel));

        return parent::setIsDel($isDel);
    }

    /**
     * {@inheritDoc}
     */
    public function TypeChangeToShow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'TypeChangeToShow', array());

        return parent::TypeChangeToShow();
    }

    /**
     * {@inheritDoc}
     */
    public function TypeChangeToData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'TypeChangeToData', array());

        return parent::TypeChangeToData();
    }

}
